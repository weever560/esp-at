name: Reusable esp32c3-at workflow template

on:
  workflow_call:
    # parameters from upstream workflow
    inputs:
      module_name:
        required: true
        type: string
      artifacts_name:
        required: true
        type: string
      enable_all_wifi_features:
        required: false
        type: boolean
    # parameters from upstream inherit
    secrets:
      AT_OTA_TOKEN_ESP32C3_MINI:
        required: false

jobs:
  build-template-esp32c3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.0
    - uses: actions/setup-python@v5.3.0
      with:
        python-version: '3.10'
    - name: Set module information
      run: |
        mkdir build
        echo -e "{\"platform\": \"PLATFORM_ESP32C3\", \"module\": \"${{ inputs.module_name }}\", \"silence\": 1}" > build/module_info.json
    - name: Enable all Wi-Fi features
      if: ${{ inputs.enable_all_wifi_features == true }}
      run: |
        echo -e "CONFIG_AT_FS_COMMAND_SUPPORT=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
        echo -e "CONFIG_AT_DRIVER_COMMAND_SUPPORT=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
        echo -e "CONFIG_AT_EAP_COMMAND_SUPPORT=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
        echo -e "CONFIG_AT_WEB_SERVER_SUPPORT=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
        echo -e "CONFIG_AT_WS_COMMAND_SUPPORT=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
        echo -e "CONFIG_AT_WEB_CAPTIVE_PORTAL_ENABLE=y" >> module_config/module_esp32c3_default/sdkconfig.defaults
    - name: Enlarge app partition size
      if: ${{ inputs.enable_all_wifi_features == true }}
      run: |
        app0_size=`cat module_config/module_esp32c3_default/partitions_at.csv | grep ota_0 | awk -F, '{print $5}'`
        app1_size=`cat module_config/module_esp32c3_default/partitions_at.csv | grep ota_1 | awk -F, '{print $5}'`
        to_set_size=$((app0_size + app1_size))
        sed -i '/ota_1/d' module_config/module_esp32c3_default/partitions_at.csv
        to_set_hex_size=`printf "0x%x" ${to_set_size}`
        sed -i '/ota_0/s,'"$app0_size"','"$to_set_hex_size"',g' module_config/module_esp32c3_default/partitions_at.csv
    - name: Set up OTA tokens
      run: |
        cd components/at/private_include
        rm -f at_ota_token.h
        echo -e "#pragma once" >> at_ota_token.h
        echo -e "#define CONFIG_ESP_AT_OTA_TOKEN_ESP32C3_MINI \"${{ secrets.AT_OTA_TOKEN_ESP32C3_MINI }}\"" >> at_ota_token.h
        echo -e "#define CONFIG_ESP_AT_OTA_SSL_TOKEN_ESP32C3_MINI \"${{ secrets.AT_OTA_TOKEN_ESP32C3_MINI }}\"" >> at_ota_token.h
        cd -
    - name: Install environment variables
      run: |
        echo "ESP_AT_FIRMWARE_FROM=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}" >> "$GITHUB_ENV"
        ./build.py install
    - name: Compile
      run: |
        ./build.py build
    - name: Upload artifacts
      uses: actions/upload-artifact@v4.4.3
      with:
        name: ${{ inputs.artifacts_name }}
        path: |
          sdkconfig
          build/*.bin
          build/*.elf
          build/*.map
          build/bootloader/*.bin
          build/partition_table/*.bin
          build/customized_partitions/*
          build/flasher_args.json
          build/download.config
          build/factory/*
